amcl:
  ros__parameters:
    use_sim_time: false
    # ... (AMCL parameters - localization) ...

bt_navigator:
  ros__parameters:
    use_sim_time: false
    # ... (Behavior Tree Navigator parameters) ...

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0 # Differential drive robots cannot move sideways
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Goal checker parameters
    general_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    # DWB parameters (for differential drive)
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      min_vel_x: 0.0
      max_vel_x: 0.0008151 # Calculated max linear velocity (m/s)
      max_vel_y: 0.0 # Must be 0 for differential drive
      max_vel_theta: 0.2958 # Calculated max angular velocity (rad/s)
      min_speed_xy: 0.0
      max_speed_xy: 0.0008151 # Same as max_vel_x
      min_speed_theta: 0.0
      acc_lim_x: 0.1 # Conservative initial value, tune based on robot performance
      acc_lim_y: 0.0 # Linear acceleration limit (must be 0)
      acc_lim_theta: 0.5 # Conservative initial value, tune based on robot performance
      decel_lim_x: -0.1
      decel_lim_y: 0.0
      decel_lim_theta: -0.5
      sim_time: 1.7
      # ... (other DWB parameters) ...

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      # ... (local costmap parameters) ...
      robot_radius: 0.1285 # Half of chassis length (0.257/2) or tune based on actual robot footprint
      plugins: ["obstacle_layer", "inflation_layer", "table_obstacle_layer::PolygonLayer"]
      table_obstacle_layer::PolygonLayer:
        plugin: "table_obstacle_layer::PolygonLayer"

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      # ... (global costmap parameters) ...
      robot_radius: 0.1285 # Half of chassis length (0.257/2) or tune based on actual robot footprint
      plugins: ["static_layer", "obstacle_layer", "inflation_layer", "table_obstacle_layer::PolygonLayer"]
      table_obstacle_layer::PolygonLayer:
        plugin: "table_obstacle_layer::PolygonLayer"


map_server:
  ros__parameters:
    use_sim_time: false
    # ... (map server parameters) ...

planner_server:
  ros__parameters:
    use_sim_time: false
    # ... (planner server parameters) ...

smoother_server:
  ros__parameters:
    use_sim_time: false
    # ... (smoother server parameters) ...

behavior_server:
  ros__parameters:
    use_sim_time: false
    # ... (behavior server parameters) ...

robot_state_publisher:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    # ... (waypoint follower parameters) ...

velocity_smoother:
  ros__parameters:
    use_sim_time: false
    # ... (velocity smoother parameters) ...